@startuml
title Optimized Client Module Boundaries (Proposed)
' Proposed grouping emphasizes small, focused modules and
' explicit API interfaces. Aligned with current code.

package "Contexts" {
  class AuthContext
  class ContactsContext
  class ConversationsContext
  class MessagesContext
  class WebSocketContext
  class ViewContext
}

package "APIs" {
  interface AuthAPI
  interface ContactsAPI
  interface ConversationsAPI
  interface MessagesAPI
}

package "Crypto" {
  class CryptoUtils
}

package "Storage" {
  class MessageStorage
  class MessageBackup
}

package "Hooks" {
  class useNotifications <<hook>>
}

class UI

AuthContext --> AuthAPI
ContactsContext --> ContactsAPI
ConversationsContext --> ConversationsAPI
ConversationsContext --> ContactsAPI
MessagesContext --> MessagesAPI
MessagesContext --> WebSocketContext
AuthContext --> CryptoUtils
ConversationsContext --> CryptoUtils
MessagesContext --> CryptoUtils
MessageBackup --> MessageStorage
ViewContext ..> UI : state
useNotifications ..> UI : badges

@enduml
