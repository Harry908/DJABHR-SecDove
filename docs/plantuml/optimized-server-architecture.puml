@startuml
title Optimized Server Module Boundaries (Proposed)
' Proposed module grouping to keep files small, cohesive,
' and loosely coupled. Matches current features; suggests
' clearer boundaries without adding new behavior.

package "HTTP Layer" {
  class AuthRoutes
  class ContactsRoutes
  class ConversationsRoutes
  class MessagesRoutes
}

package "Services" {
  class AuthService <<service>>
  class RealtimeGateway <<realtime>>
  class DBVerifyService <<service>>
}

package "Persistence" {
  class Database <<persistence>>
}

package "Security" {
  class AuthMiddleware
  class RateLimiter
  class HelmetCSP
  class CORSConfig
}

package "Config" {
  class EnvConfig
}

AuthRoutes --> AuthService
ContactsRoutes --> Database
ConversationsRoutes --> Database
MessagesRoutes --> Database
MessagesRoutes ..> RealtimeGateway

AuthService --> Database
AuthMiddleware ..> AuthService : verifyToken
DBVerifyService --> Database

note right of AuthService
  wraps utils/auth.js
end note
note right of DBVerifyService
  wraps utils/databaseVerification.js
end note
note right of Database
  config/database.js
end note

HelmetCSP ..> AuthRoutes
CORSConfig ..> AuthRoutes
RateLimiter ..> AuthRoutes

EnvConfig ..> AuthRoutes
EnvConfig ..> ContactsRoutes
EnvConfig ..> ConversationsRoutes
EnvConfig ..> MessagesRoutes
EnvConfig ..> RealtimeGateway
EnvConfig ..> Database

@enduml
