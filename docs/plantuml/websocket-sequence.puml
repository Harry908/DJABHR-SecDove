@startuml
title WebSocket Sequence: Connect, Authenticate, Join/Leave

actor Client
participant "WebSocketContext (client)" as WSC
participant "Socket.IO Server (server)" as WSS

Client -> WSC: mount with token
WSC -> WSS: io('http://localhost:8000').connect()
WSS --> WSC: connect (socket.id)
WSC -> WSS: emit 'authenticate'(token)
WSS -> WSS: verifyToken(token)
alt valid
  WSS --> WSC: emit 'authenticated' { success: true }
else invalid
  WSS --> WSC: emit 'authenticated' { success: false }
  WSS -> WSC: disconnect
end

== Join Conversation ==
Client -> WSC: joinConversation(conversationId)
WSC -> WSS: emit 'join-conversation'(conversationId)
WSS -> WSS: socket.join(`conversation:<id>`)

== Leave Conversation ==
Client -> WSC: leaveConversation(conversationId)
WSC -> WSS: emit 'leave-conversation'(conversationId)
WSS -> WSS: socket.leave(`conversation:<id>`)

== Incoming Message ==
WSS -> WSC: emit 'new-message'(messageData)
WSC -> Client: handler -> decrypt via MessagesContext

@enduml

